$(function () {
    //列表
    vm.initTable();

    $("form").FM({
        fields: vm.fields,
        success: vm.saveOrUpdate

    })

});


function operFormatter() {
    if (1 == 1) {
        return ['<a id="btn_edit" class="">' + vm.$t("modify") + '</a>&nbsp;&nbsp;<a id="btn_del" class="">' + vm.$t("delete") + '</a>'].join('');
    } else {
        return ['<a id="btn_del" class="">' + vm.$t("delete") + '</a>'].join('');
    }
}

window.operateEvents = {
    'click #btn_edit': function (e, value, row, index) {
        var rowId = row.id;
        vm.update(rowId);
    },
    'click #btn_del': function (e, value, row, index) {
        var rowId = row.id;
        vm.del(rowId);
    }
};

var vm = new Vue({
    el: '#demandBOdy',
    i18n,
    data: {
        showList: true,
        title: null,
        agentDemand: {},
        serviceList: [],
        business: [],
        categoryList: [],
        category: [],
        disenbled: false,
        params: {
            title: '',
        },
//验证字段
        fields: {
            title: {
                message: '标题验证失败',
                validators: {
                    notEmpty: {
                        message: '标题不能为空'
                    }, stringLength: {
                        max: 20,
                        message: '标题长度不超过20字符'
                    }
                },
            }, goodsName: {
                message: '商品名称验证失败',
                validators: {
                    notEmpty: {
                        message: '商品名称不能为空'
                    }, stringLength: {
                        max: 20,
                        message: '商品名称长度不超过20字符'
                    }
                },
            }, weight: {
                message: '重量验证失败',
                validators: {
                    notEmpty: {
                        message: '重量不能为空'
                    }, regexp: {
                        regexp: /(^[1-9](\d{1,10})?(\.\d{1,2})?$)|(^0$)|(^\d\.\d{1,2}$)/,
                        message: '重量最多11位整数，可保留2位小数'
                    }
                //    ^[0-9]{1,6}([.][0-9]{1,5})?$
                },
            }, unit: {
                message: '单位验证失败',
                validators: {
                    notEmpty: {
                        message: '请选择重量单位'
                    },
                },
            }, description: {
                message: '描述验证失败',
                validators: {
                    notEmpty: {
                        message: '请输入描述信息'
                    },
                },
            }, contact: {
                message: '联系人失败',
                validators: {
                    notEmpty: {
                        message: '请输入联系人'
                    },
                    stringLength: {
                        max: 20,
                        message: '联系人长度不超过20字符'
                    }
                },

            }, mobile: {
                message: '手机号码失败',
                validators: {
                    notEmpty: {
                        message: '请输入手机号码'
                    },
                    regexp: {
                        regexp: /^1[3456789]\d{9}$/,
                        message: '请输入正确的手机号码'
                    }
                },

            },
            sltValuationUnit:{
                message: '单位失败',
                notEmpty: {
                    message: '请选择单位'
                }
            }
        },
        ue: UE.getEditor('myEditor', {
            initialFrameHeight: 350,
        }),
    },
    methods: {
        initTable: function () {
            //列表
            $("#table").bootstrapTable("destroy");     //**********对于查询必不可少
            $("#table").BT({
                url: baseURL + 'agent/demand/list',
                columns: [
                    {checkbox: true},
                    {title: vm.$t("title"), field: 'title'},
                    {title: vm.$t("contact"), field: 'contacts'},
                    {title: vm.$t("MobilePhoneNo"), field: 'mobile'},
                    {title: vm.$t("productName"), field: 'goodsName'},
                    {title: vm.$t("Weight"), field: 'weight'},
                    {title: vm.$t("unit"), field: 'unit'},
                    {title: vm.$t("chaozuo"), width: 120, formatter: operFormatter, events: operateEvents}
                ],
                //条件查询
                queryParams: vm.params
            });
        },
        query: function () {
            vm.reload();
        },
        add: function () {
            vm.showList = false;
            vm.title = "新增";
            vm.agentDemand = {
                unit: ''
            };
            vm.getServiceType();
            vm.getGoodsType();

        },
        update: function (rowId) {
            if (rowId == null) {
                return;
            }
            vm.showList = false;
            vm.title = "修改";
            vm.getServiceType();
            vm.getGoodsType();
            vm.getInfo(rowId);

        },
        //表单验证
        validate: function () {
            var bl = $('form').VF();//启用验证
            if (!bl) {
                return;
            }
        },
        saveOrUpdate: function (event) {

            var url = vm.agentDemand.id == null ? "agent/demand/save" : "agent/demand/update";
            let $box = $("input[name='serviceId']:checked");
            if ($box.length > 0) {
                vm.business = [];
                $.each($box, function (index, item) {
                    let $this = $(this);
                    let obj = {};
                    obj.busId = $this.val();
                    obj.busName = $this.attr('text');
                    vm.business.push(obj);
                });
                vm.agentDemand.business = vm.business;
            } else {
                alert("请选择代理项目", function () {
                });
                return false;
            }

            let $cateBox = $("input[name='categoryId']:checked");
            if ($cateBox.length > 0) {
                vm.category = [];
                $.each($cateBox, function (index, item) {
                    let $this = $(this);
                    let obj = {};
                    obj.categoryId = item.value;
                    obj.categoryName = $this.attr('text');
                    vm.category.push(obj);
                })
                vm.agentDemand.categorys = vm.category;
            } else {
                alert("请选择代理所属分类");
                return false;
            }

            if (vm.agentDemand.unit == null || vm.agentDemand.unit == '') {
                alert("请选择重量单位");
                return false;
            }
            //UE取值
            vm.agentDemand.description = UE.utils.unhtml(this.ue.getContent());

            layer.load();
            $.ajax({
                type: "POST",
                url: baseURL + url,
                contentType: "application/json",
                data: JSON.stringify(vm.agentDemand),
                success: function (r) {
                    if (r.code === 0) {
                        layer.closeAll();
                        alert('操作成功', function (index) {
                            vm.reload();
                        });
                    } else {
                        alert(r.msg);
                    }
                }
            });
        },
        del: function (rowId) {
            if (rowId == null) {
                return;
            }

            confirm('确定要删除选中的记录？', function () {
                $.ajax({
                    type: "POST",
                    url: baseURL + "agent/demand/delete",
                    contentType: "application/json",
                    data: JSON.stringify(rowId),
                    // dataType: "json",
                    // data: {id: rowId},
                    success: function (r) {
                        if (r.code == 0) {
                            alert('操作成功', function (index) {
                                vm.reload();
                            });
                        } else {
                            alert(r.msg);
                        }
                    }
                });
            });
        },
        getInfo: function (id) {
            $.get(baseURL + "agent/demand/info/" + id, function (r) {
                vm.agentDemand = r.data;

                //默认勾选代理项目
                if (vm.agentDemand.business != null) {
                    vm.agentDemand.business.forEach(function (obj, index) {
                        let $checkbox = $("input[name='serviceId']");
                        if ($checkbox.length > 0) {
                            $.each($checkbox, function (idx, item) {
                                let cValue = item.value;
                                if (obj.busId == cValue) {
                                    $(this).prop('checked', true);
                                }
                            });
                        }
                    });
                }

                //默认勾选所属商品分类
                if (vm.agentDemand.categorys != null) {
                    vm.agentDemand.categorys.forEach(function (obj, index) {
                        let $checkbox = $("input[name='categoryId']");
                        if ($checkbox.length > 0) {
                            $.each($checkbox, function (idx, item) {
                                let cValue = item.value;
                                if (obj.categoryId == cValue) {
                                    $(this).prop('checked', true);
                                }
                            });
                        }
                    });
                }

                //UE赋值 富文本
                vm.ue.setContent(UE.utils.html(vm.agentDemand.description));
            });
        },
        reload: function (event) {
            vm.showList = true;
            vm.title = "";
            //刷新 如需条件查询common.js
            $("#table").BTF5(vm.params);
            $("form").RF();
            vm.ue.setContent("");
            $("input[name='serviceId']:checked").prop("checked", false);
            $("input[name='categoryId']:checked").prop("checked", false);
        },
        //获取服务类型分类
        getServiceType: function () {
            $.get(baseURL + 'company/servicetype/getSltList', function (res) {
                if (res.code == 0) {
                    for (var i = 0; i < res.data.length; i++) {
                        if (res.data[i].id == '5' || res.data[i].serviceName == '代理服务'||res.data[i].id == '6' || res.data[i].serviceName == '金融'||res.data[i].id == '7' || res.data[i].serviceName == '保险') {
                            res.data.splice(i, 1); //去掉代理服务、金融、保险
                            i--;
                        }
                    }
                    vm.serviceList = res.data;
                }
            });
        },
        //获取所属商品分类
        getGoodsType: function () {
            $.get(baseURL + 'goods/category/getCategoryList', function (res) {
                if (res.code == 0) {
                    vm.categoryList = res.data;

                }
            });
        },
    },
    watch: {
        "$i18n.locale": function (value, old) {
            if (value == 'en') {
                $("#table").bootstrapTable.defaults.locale = "en-US";
            } else {
                $("#table").bootstrapTable.defaults.locale = "zh-CN";
            }
            $("#table").bootstrapTable("destroy");
            this.initTable();
        },
        "title": function (value, old) {
            // $("form").RF();

        }
    }
});

$(".selectUnitCode").on("select2:select", function () {
    var data = $(this).val();
    vm.agentDemand.unit = data;

});