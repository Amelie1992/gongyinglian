<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wzlue.chain.logistics.dao.LogisticsOrderDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wzlue.chain.logistics.entity.LogisticsOrderEntity" id="logisticsOrderMap">
        <result property="id" column="id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="contractNumber" column="contract_number"/>
        <result property="phone" column="phone"/>
        <result property="contact" column="contact"/>
        <result property="contactCompanyName" column="contact_company_name"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="remarks" column="remarks"/>
        <result property="total" column="total"/>
        <result property="price" column="price"/>
        <result property="num" column="num"/>
        <result property="productName" column="product_name"/>
        <result property="currency" column="currency"/>
        <result property="numberCode" column="number_code"/>
        <result property="describe" column="describe"/>
        <result property="passStatus" column="pass_status"/>
        <result property="buyStatus" column="buy_status"/>
        <result property="sellStatus" column="sell_status"/>
        <result property="orderStatus" column="order_status"/>
        <result property="alterSale" column="alter_sale"/>
        <result property="merchantPhone" column="merchant_phone"/>
        <result property="merchantContact" column="merchant_contact"/>
        <result property="merchantEmail" column="merchant_email"/>
        <result property="merchantAddress" column="merchant_address"/>
        <result property="merchantCompanyId" column="merchant_company_id"/>
        <result property="merchantCompanyName" column="merchant_company_name"/>
        <result property="merchantDeptId" column="merchant_dept_id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="receiptTime" column="receipt_time"/>
        <result property="receiptDetpId" column="receipt_detp_id"/>
        <result property="receiptMerchantId" column="receipt_merchant_id"/>
        <result property="agreementId" column="agreement_id"/>
        <result property="companyId" column="company_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="createBy" column="create_by"/>
        <result property="authorizesId" column="authorizes_id"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="buyContact" column="buy_contact"/>
        <result property="buyPhone" column="buy_phone"/>
        <result property="buyAddress" column="buy_address"/>
        <association property="logisticsOrderShipEntity"
                     javaType="com.wzlue.chain.logistics.entity.LogisticsOrderShipEntity"
                     column="{orderId=order_number}"
                     select="com.wzlue.chain.logistics.dao.LogisticsOrderShipDao.queryByOrderId"
                     autoMapping="true">
            <result property="id" column="id"/>
            <result property="orderId" column="order_id"/>
            <result property="logisticsCompanyId" column="logistics_company_id"/>
            <result property="logisticsCode" column="logistics_code"/>
            <result property="logisticsNumber" column="logistics_number"/>
            <result property="numberPlate" column="number_plate"/>
            <result property="driverName" column="driver_name"/>
            <result property="driverNumber" column="driver_number"/>
            <result property="driverIdNumber" column="driver_id_number"/>
            <result property="remark" column="remark"/>
        </association>
        <collection property="logisticsOfferEntity" ofType="com.wzlue.chain.logistics.entity.LogisticsOrderOfferEntity"
                    column="id"
                    select="com.wzlue.chain.logistics.dao.LogisticsOrderOfferDao.queryByOrderId"
                    autoMapping="true"></collection>
        <collection property="logisticsOrderCommodityEntityList"
                    ofType="com.wzlue.chain.logistics.entity.LogisticsOrderCommodityEntity"
                    column="id"
                    select="com.wzlue.chain.logistics.dao.LogisticsOrderCommodityDao.queryByOrderId"
                    autoMapping="true"></collection>
    </resultMap>

    <select id="queryObject" resultMap="logisticsOrderMap">
		SELECT * FROM logistics_order WHERE id = #{value}
	</select>

    <select id="queryByOrderNumber" resultType="com.wzlue.chain.logistics.entity.LogisticsOrderEntity">
		SELECT * FROM logistics_order WHERE order_number = #{orderNumber}
	</select>

    <select id="queryListByNumberCode" resultType="com.wzlue.chain.logistics.entity.LogisticsOrderEntity">
		SELECT * FROM logistics_order WHERE number_code = #{numberCode}
	</select>

    <select id="queryList" resultMap="logisticsOrderMap">
        SELECT
        lo.id,
        lo.order_number,
        lo.contract_number,
        lo.phone,
        lo.contact_company_name,
        lo.contact,
        lo.address,
        lo.remarks,
        lo.num,
        lo.price,
        lo.total,
        lo.describe,
        lo.pass_status,
        lo.order_status,
        lo.buy_status,
        lo.sell_status,
        lo.alter_sale,
        lo.merchant_phone,
        lo.merchant_contact,
        lo.merchant_company_name,
        lo.receipt_time,
        lo.create_by,
        lo.created_time,
        lo.updated_by,
        lo.updated_time
        FROM
        logistics_order lo
        <where>
            <if test="orderNumber != null and orderNumber.trim() !=''">
                lo.order_number like concat('%',#{orderNumber},'%')
            </if>
            <if test="productName != null and productName.trim() !=''">
                and lo.product_name = #{productName}
            </if>
            <if test="companyId != null and companyId != ''">
                AND lo.company_id=#{companyId}
            </if>
            <if test="merchantCompanyId!=null and merchantCompanyId !=''">
                AND lo.merchant_company_id=#{merchantCompanyId}
            </if>
            <if test="orderStatus!=null and orderStatus !=''">
                AND lo.order_status=#{orderStatus}
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                ORDER BY ${sidx} ${order}
            </when>
            <otherwise>
                ORDER BY id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        SELECT count(*) FROM logistics_order lo
        <where>
            <if test="orderNumber != null and orderNumber.trim() !=''">
                lo.order_number like concat('%',#{orderNumber},'%')
            </if>
            <if test="productName != null and productName.trim() !=''">
                and lo.product_name = #{productName}
            </if>
            <if test="companyId != null and companyId != ''">
                AND lo.company_id=#{companyId}
            </if>
            <if test="merchantCompanyId!=null and merchantCompanyId !=''">
                AND lo.merchant_company_id=#{merchantCompanyId}
            </if>
            <if test="orderStatus!=null and orderStatus !=''">
                AND lo.order_status=#{orderStatus}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.wzlue.chain.logistics.entity.LogisticsOrderEntity" useGeneratedKeys="true"
            keyProperty="id">
		INSERT INTO logistics_order
		(
			`order_number`,
			`contract_number`,
			`phone`,
			`contact`,
			`contact_company_name`,
			`email`,
			`address`,
			`remarks`,
			`total`,
			`product_name`,
			`price`,
			`num`,
			`currency`,
			`number_type`,
			`number_code`,
			`describe`,
			`pass_status`,
			`buy_status`,
			`sell_status`,
			`order_status`,
			`alter_sale`,
			`merchant_phone`,
			`merchant_contact`,
			`merchant_email`,
			`merchant_address`,
			`merchant_company_id`,
			`merchant_company_name`,
			`merchant_dept_id`,
			`merchant_id`,
			`receipt_time`,
			`receipt_detp_id`,
			`receipt_merchant_id`,
			`agreement_id`,
			`company_id`,
			`dept_id`,
			`create_by`,
			`authorizes_id`,
			`created_time`,
			`updated_by`,
			`updated_time`,
			`del_flag`,
			`buy_contact`,
			`buy_phone`,
            `buy_address`
		)
		VALUES
		(
			#{orderNumber},
			#{contractNumber},
			#{phone},
			#{contact},
			#{contactCompanyName},
			#{email},
			#{address},
			#{remarks},
			#{total},
			#{productName},
			#{price},
			#{num},
			#{currency},
			#{numberType},
			#{numberCode},
			#{describe},
			#{passStatus},
			#{buyStatus},
			#{sellStatus},
			#{orderStatus},
			#{alterSale},
			#{merchantPhone},
			#{merchantContact},
			#{merchantEmail},
			#{merchantAddress},
			#{merchantCompanyId},
			#{merchantCompanyName},
			#{merchantDeptId},
			#{merchantId},
			#{receiptTime},
			#{receiptDetpId},
			#{receiptMerchantId},
			#{agreementId},
			#{companyId},
			#{deptId},
			#{createBy},
			#{authorizesId},
			#{createdTime},
			#{updatedBy},
			#{updatedTime},
			#{delFlag},
			#{buyContact},
			#{buyPhone},
			#{buyAddress}
		)
	</insert>

    <update id="update" parameterType="com.wzlue.chain.logistics.entity.LogisticsOrderEntity">
        UPDATE logistics_order
        <set>
            <if test="orderNumber != null">`order_number` = #{orderNumber},</if>
            <if test="contractNumber != null">`contract_number` = #{contractNumber},</if>
            <if test="phone != null">`phone` = #{phone},</if>
            <if test="contact != null">`contact` = #{contact},</if>
            <if test="contactCompanyName != null">`contact_company_name` = #{contactCompanyName},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="address != null">`address` = #{address},</if>
            <if test="remarks != null">`remarks` = #{remarks},</if>
            <if test="productName != null">`product_name` = #{productName},</if>
            <if test="total != null">`total` = #{total},</if>
            <if test="price != null">`price` = #{price},</if>
            <if test="num != null">`num` = #{num},</if>
            <if test="currency != null">`currency` = #{currency},</if>
            <if test="numberType != null">`number_type` = #{numberType},</if>
            <if test="numberCode != null">`number_code` = #{numberCode},</if>
            <if test="describe != null">`describe` = #{describe},</if>
            <if test="passStatus != null">`pass_status` = #{passStatus},</if>
            <if test="buyStatus != null">`buy_status` = #{buyStatus},</if>
            <if test="sellStatus != null">`sell_status` = #{sellStatus},</if>
            <if test="orderStatus != null">`order_status` = #{orderStatus},</if>
            <if test="alterSale != null">`alter_sale` = #{alterSale},</if>
            <if test="merchantPhone != null">`merchant_phone` = #{merchantPhone},</if>
            <if test="merchantContact != null">`merchant_contact` = #{merchantContact},</if>
            <if test="merchantEmail != null">`merchant_email` = #{merchantEmail},</if>
            <if test="merchantAddress != null">`merchant_address` = #{merchantAddress},</if>
            <if test="merchantCompanyId != null">`merchant_company_id` = #{merchantCompanyId},</if>
            <if test="merchantCompanyName != null">`merchant_company_name` = #{merchantCompanyName},</if>
            <if test="merchantDeptId != null">`merchant_dept_id` = #{merchantDeptId},</if>
            <if test="merchantId != null">`merchant_id` = #{merchantId},</if>
            <if test="receiptTime != null">`receipt_time` = #{receiptTime},</if>
            <if test="receiptDetpId != null">`receipt_detp_id` = #{receiptDetpId},</if>
            <if test="receiptMerchantId != null">`receipt_merchant_id` = #{receiptMerchantId},</if>
            <if test="agreementId != null">`agreement_id` = #{agreementId},</if>
            <if test="companyId != null">`company_id` = #{companyId},</if>
            <if test="deptId != null">`dept_id` = #{deptId},</if>
            <if test="createBy != null">`create_by` = #{createBy},</if>
            <if test="authorizesId != null">`authorizes_id` = #{authorizesId},</if>
            <if test="createdTime != null">`created_time` = #{createdTime},</if>
            <if test="updatedBy != null">`updated_by` = #{updatedBy},</if>
            <if test="updatedTime != null">`updated_time` = #{updatedTime},</if>
            <if test="delFlag != null">`del_flag` = #{delFlag},</if>
            <if test="buyContact != null">`buy_contact` = #{buyContact},</if>
            <if test="buyPhone != null">`buy_phone` = #{buyPhone},</if>
            <if test="buyAddress != null">`buy_address` = #{buyAddress},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updatePrice" parameterType="map">
        UPDATE logistics_order
        <set>
            <if test="afterPrice != null and afterPrice != ''">
                total = #{afterPrice}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <delete id="delete">
		DELETE FROM logistics_order WHERE id = #{value}
	</delete>

    <delete id="deleteBatch">
        DELETE FROM logistics_order WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCompanys" resultType="com.wzlue.chain.company.entity.MerchantCompanyEntity">
		SELECT DISTINCT a.id,a.company_name  companyName
        FROM merchant_company a
        INNER JOIN logistics_offer o ON a.id=o.company_id AND o.del_flag=0 AND o.status = 0
        WHERE a.id != #{companyId}
	</select>

    <select id="showList" resultType="java.util.Map">
        SELECT
        IFNULL(COUNT(lo.`id`),0) AS total
        <choose>
            <when test="dateType !=null and dateType=='year' ">
                ,CONCAT(MONTH(lo.`created_time`),'月') AS title
            </when>
            <when test="dateType !=null and dateType=='quarter' ">
                ,CONCAT(MONTH(lo.`created_time`),'月') AS title
            </when>
            <when test="dateType !=null and dateType =='month'">
                ,CONCAT(MONTH(lo.`created_time`),'-',DAYOFMONTH(lo.`created_time`)) AS title
            </when>
        </choose>
        FROM logistics_order lo
        WHERE 1=1
        AND lo.`del_flag` != 1
        <if test="companyId !=null ">
            AND lo.company_id = #{companyId}
        </if>
        <if test="stime!=null and etime!=null">
            AND TO_DAYS(lo.`created_time`) BETWEEN TO_DAYS(STR_TO_DATE(#{stime},'%Y-%m-%d')) AND
            TO_DAYS(STR_TO_DATE(#{etime},'%Y-%m-%d'))
            <choose>
                <when test="dateType=='year' or dataType=='quarter'">
                    GROUP BY MONTH(lo.`created_time`)
                </when>
                <when test="dateType=='month'">
                    GROUP BY TO_DAYS(lo.`created_time`)
                </when>
            </choose>
        </if>
    </select>

    <select id="queryListByNumberCodeAndNumberType" resultType="map">
        SELECT
        lo.id id,order_number orderNumber
        FROM
        logistics_order lo
        <where>
            lo.number_code=#{numberCode}
            and lo.number_type=#{numberType}
            and (lo.company_id=#{companyId} or lo.merchant_company_id=#{companyId})
        </where>
    </select>
</mapper>