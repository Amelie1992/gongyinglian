$(function () {
    //表单提交
    // $("form").FM({
    //     fields: vm.fields,
    //     success: vm.saveOrUpdate
    // });
    $("#transferF").FM({
        fields: vm.fields,
        success: vm.offlinePay
    });
    // 时间日期
    $("#payTime").datetimepicker().on('hide', function (ev) {
        var value = $("#payTime").val();
        vm.transfer.payTime = value;

    });

    vm.$refs.file.destroy();
    vm.$refs.file.initFileInput();

    $("#radioA").prop("checked", true);
    $("#radioA1").prop("checked", true);
});

var vm = new Vue({
    el: '#rrapp',
    i18n,
    data: {
        payList: true,
        title: null,
        transfer: {
            linkOrder: 0,
            linkOrder1: 0
        },
        images: [],
        companys: [],
        companys1: [],
//验证字段
        fields: {
            expenditur: {
                message: '支付金额验证失败',
                validators: {
                    notEmpty: {
                        message: '支付金额不能为空'
                    }, regexp: {
                        regexp: /(^[1-9](\d{1,10})?(\.\d{1,2})?$)|(^0$)|(^\d\.\d{1,2}$)/,
                        message: '打款金额的整数位最多11位，可保留2位小数'
                    }
                },
            },
            // payeeId: {
            //     message: '对方公司验证失败',
            //     validators: {
            //         notEmpty: {
            //             message: '对方公司不能为空'
            //         }
            //     }
            // },
            payerNumber: {
                message: '付款银行卡号验证失败',
                validators: {
                    notEmpty: {
                        message: '付款银行卡号不能为空'
                    }
                }
            }, payeeNumber: {
                message: '对方银行卡号验证失败',
                validators: {
                    notEmpty: {
                        message: '对方银行卡号不能为空'
                    }
                }
            }, operator: {
                message: '打款人验证失败',
                validators: {
                    notEmpty: {
                        message: '打款人不能为空'
                    }, stringLength: {
                        max: 20,
                        message: '打款人长度要小于20个字符'
                    }
                },
            }, payTime: {
                message: '打款时间验证失败',
                trigger: 'change',
                validators: {
                    notEmpty: {
                        message: '打款时间不能为空'
                    },
                },
            }, images: {
                message: '打款凭证验证失败',
                validators: {
                    notEmpty: {
                        message: '打款凭证不能为空'
                    },
                },
            }, images: {
                message: '单位验证失败',
                validators: {
                    notEmpty: {
                        message: '单位不能为空'
                    },
                },
            }
        },
    },
    methods: {
        initTable: function () {
            //列表
            $("#table").bootstrapTable("destroy");      //**********对于查询必不可少
            $("#table").BT({
                url: baseURL + 'bill/bill/listPay',
                columns: [
                    {checkbox: true},
                    {
                        title: vm.$t("SourceOfBill"), formatter: function (value, row, index) {
                            var ss = '';
                            if (row.orderType == 0) { //订单类型 0：报关 1：货物 2：物流 3：仓储 4：代理
                                ss += '报关订单';
                            } else if (row.orderType == 1) {
                                ss += '货物订单';
                            } else if (row.orderType == 2) {
                                ss += '物流订单';
                            } else if (row.orderType == 3) {
                                ss += '仓储订单';
                            } else if (row.orderType == 4) {
                                ss += '代理订单';
                            }
                            return ss;
                        }
                    },
                    {title: vm.$t("ContractNumber"), field: 'contractNumber'},
                    {title: vm.$t("OrderId"), field: 'orderNumber'},
                    {title: vm.$t("Cashier"), field: 'payee'},
                    // {title: '付款商家', field: 'payer'},
                    // {title: '应收金额', field: 'amountReceivable'},
                    {title: vm.$t("AmountPayable"), field: 'amountPayable'},
                    // {title: '已收金额', field: 'amountReceived'},
                    {title: vm.$t("amountPaid"), field: 'amountPaid'},
                    // {title: '剩余金额', field: 'remainingAmountReceivable'},
                    {title: vm.$t("SurplusAmount"), field: 'remainingAmountPayable'},
                    {
                        title: vm.$t("StateOfMoney"), field: 'payableStatus',
                        formatter: function (value) {
                            if (value == 0) {
                                return "未结清"
                            } else if (value == 1) {
                                return "已结清"
                            }
                        }
                    },
                    // {title: '应付款项状态  0：未结清 1：已结清', field: 'payableStatus'},
                    // {title: '确认收款时间', field: 'receivingTime'},
                    {title: vm.$t("TimeOfPayment"), field: 'paymentTime'},
                    // {title: '备注', field: 'receivingRemarks'},
                    {title: vm.$t("Remarks"), field: 'paymentRemarks'},
                    {
                        title: vm.$t("ValidState"), field: 'validState',
                        formatter: function (value) {
                            if (value == 1) {
                                return "失效"
                            } else {
                                return "有效"
                            }
                        }
                    },
                    {
                        title: vm.$t("chaozuo"), field: 'id',
                        formatter: function (value) {
                            return "<a href='javascript:void(0)' class='getInfo'>查看详情</a>"
                        },
                        events: {
                            "click .getInfo": function (events, value) {
                                vm.showList = false;
                                vm.detailList = true;
                                vm.payList = false;
                                vm.title = "详情";
                                vm.getInfo(value);
                            }
                        }
                    }
                ],
                //条件查询
                queryParams: vm.params
            });

            $("#recordTable").bootstrapTable("destroy");
            $("#recordTable").bootstrapTable({
                // url: baseURL + 'paymentRecord/paymentrecord/list',
                columns: [
                    {checkbox: true},
                    // {title: '账单号', field: 'billId'},
                    // {title: '金额', field: 'amount'},
                    {
                        title: vm.$t("money"), field: 'amount',
                        formatter: function (value, row, index) {
                            return '<a href="javascript:void(0)" id="btn_cost">' + row.amount + '</a>'
                        },
                        events: {
                            "click #btn_cost": function (events, value, row, index) {
                                //若为仓储订单，点击金额会出弹框
                                if (vm.bill.orderType == 3) {

                                    $("#myModal").modal('show');    //弹框

                                    vm.getCostInfo(row.id);        //查 费用明细表
                                }
                            }
                        }
                    },
                    {title: vm.$t("date"), field: 'date'},
                    {
                        title: vm.$t("PaymentStatus"), field: 'payStatus',
                        formatter: function (value) {
                            if (value == 0) {
                                return "待付款"
                            } else if (value == 1) {
                                return "已付款"
                            }
                        }
                    },
                    {
                        title: vm.$t("PaymentMethod"), field: 'payMethod',
                        formatter: function (value) {
                            if (value == 0) {
                                return "线下支付"
                            } else if (value == 1) {
                                return " 在线支付"
                            }
                        }
                    },
                    {title: vm.$t("AccountsReceivableAccount"), field: 'payeeNumber'},
                    // {title: '付款账号', field: 'payerNumber'},
                    {title: vm.$t("AccountName"), field: 'payeeName'},
                    // {title: '户名', field: 'payerName'},
                    {title: vm.$t("AffiliatedBank"), field: 'payeeBank'},
                    // {title: '所属银行', field: 'payerBank'},
                    {title: vm.$t("Operator"), field: 'paymentOperator'},
                    {title: vm.$t("TimeOfPayment"), field: 'paymentTime'},
                    // {
                    //     title: '确认状态', field: 'confirmStatus',
                    //     formatter: function (value) {
                    //         if (value == 0) {
                    //             return "待确认"
                    //         } else {
                    //             return "已确认"
                    //         }
                    //     }
                    // },
                    // {title: '确认收款时间', field: 'receivingTime'},
                    // {title: '实收金额', field: 'amountCollected'},
                    {title: vm.$t("Remarks"), field: 'paymentRemarks'}

                ]
            });

            $("#costTable1").bootstrapTable("destroy");
            $("#costTable1").bootstrapTable({
                striped: true,
                showHeader: false,
                columns: [
                    {title: vm.$t("WarehousingFee"), field: '0'},
                    {title: vm.$t("HandlingCharge"), field: '1'},
                    {title: vm.$t("DisposalCharge"), field: '2'},
                    {title: vm.$t("RepeatUpAndDown"), field: '3'},
                    {title: vm.$t("SortingFee"), field: '4'},
                    {title: vm.$t("TallyFee"), field: '5'},
                    {title: vm.$t("CopyTheCodeFor"), field: '6'},
                    {title: vm.$t("AfterFrozenFee"), field: '7'},
                    // {title: '查验移箱费', field: 'a'},
                    // {title: '查验掏箱费', field: 'b'},
                    // {title: '查验开关箱门费及铅封', field: 'c'},
                    // {title: '门到门查验费', field: 'd'},
                    // {title: '出入库费', field: 'e'},
                    // {title: '缠绕膜', field: 'f'},
                    // {title: '箱车对倒', field: 'g'},
                    // {title: '预冷费', field: 'h'}
                ]
            })

            $("#costTable2").bootstrapTable("destroy");
            $("#costTable2").bootstrapTable({
                striped: true,
                showHeader: false,
                columns: [
                    // {title: '仓储费', field: '0'},
                    // {title: '装卸费', field: '1'},
                    // {title: '处置费', field: '2'},
                    // {title: '重复上下架', field: '3'},
                    // {title: '分拣费', field: '4'},
                    // {title: '理货费', field: '5'},
                    // {title: '抄码费', field: '6'},
                    // {title: '复冻费', field: '7'},
                    {title: vm.$t("InspectionOfTransferFare"), field: 'a'},
                    {title: vm.$t("CheckTheCostOfDigging"), field: 'b'},
                    {title: vm.$t("CheckSwitchBoxDoorChargesAndLeadSeals"), field: 'c'},
                    {title: vm.$t("DoorToDoorInspectionFee"), field: 'd'},
                    {title: vm.$t("EntryAndExitFee"), field: 'e'},
                    {title: vm.$t("WrappingFilm"), field: 'f'},
                    {title: vm.$t("BoxCarOpposite"), field: 'g'},
                    {title: vm.$t("PreCoolingFee"), field: 'h'}
                ]
            })


            /*  $("#costTable").bootstrapTable("destroy");
              $("#costTable").BT({
                  // url: baseURL + 'storage/ordercost/costInfo/' + vm.recordId,
                  columns: [
                      // {checkbox: true},
                      {title: '仓储费', field: ''},
                      {title: '装卸费', field: 'money1'},
                      {title: '处置费', field: 'money2'},
                      {title: '重复上下架', field: 'money3'},
                      {title: '分拣费', field: 'money4'},
                      {title: '理货费', field: 'money5'},
                      {title: '抄码费', field: 'money6'},
                      {title: '复冻费', field: 'money7'},
                      {title: '查验移箱费', field: 'money8'},
                      {title: '查验掏箱费', field: 'money9'},
                      {title: '查验开关箱门费及铅封', field: 'money10'},
                      {title: '门到门查验费', field: 'money11'},
                      {title: '出入库费', field: 'money12'},
                      {title: '缠绕膜', field: 'money13'},
                      {title: '箱车对倒', field: 'money14'},
                      {title: '预冷费', field: 'money15'}
                  ]
              });*/

        },

        query: function () {
            vm.reload();
        },
        add: function () {
            vm.showList = false;
            vm.detailList = true;
            vm.payList = false;
            vm.title = "新增";
            vm.bill = {};
            vm.transfer.unit = 0;
        },
        update: function (event) {
            var id = getSelectedRowId("id");
            if (id == null) {
                return;
            }
            vm.showList = false;
            vm.detailList = true;
            vm.payList = false;
            vm.title = "修改";

            vm.getInfo(id)
        },
        //表单验证
        validate: function () {
            var bl = $('#transferF').VF();//启用验证
            if (!bl) {
                return;
            }
        },
        saveOrUpdate: function (event) {
            var url = vm.bill.id == null ? "bill/bill/save" : "bill/bill/update";
            $.ajax({
                type: "POST",
                url: baseURL + url,
                contentType: "application/json",
                data: JSON.stringify(vm.bill),
                success: function (r) {
                    if (r.code === 0) {
                        alert('操作成功', function (index) {
                            vm.reload();
                        });
                    } else {
                        alert(r.msg);
                    }
                }
            });
        },
        del: function (event) {
            var ids = getSelectedRowsId("id");
            if (ids == null) {
                return;
            }

            confirm('确定要删除选中的记录？', function () {
                $.ajax({
                    type: "POST",
                    url: baseURL + "bill/bill/delete",
                    contentType: "application/json",
                    data: JSON.stringify(ids),
                    success: function (r) {
                        if (r.code == 0) {
                            alert('操作成功', function (index) {
                                vm.reload();
                            });
                        } else {
                            alert(r.msg);
                        }
                    }
                });
            });
        },
        getInfo: function (id) {
            vm.bill = {};
            vm.paymentRecords = [];
            $.get(baseURL + "bill/bill/info/" + id, function (r) {
                vm.bill = r.bill;
                r.bill.paymentRecords.forEach(function (item) {
                    vm.paymentRecords.push(item);
                });
                $("#recordTable").bootstrapTable("removeAll");
                $("#recordTable").bootstrapTable("append", vm.paymentRecords);
                vm.showList = false;
                vm.detailList = true;
                vm.payList = false;
            });
        },
        getInfoByOrderNo: function (orderNo) {
            console.log("11")
            vm.bill = {};
            vm.paymentRecords = [];
            $.get(baseURL + "bill/bill/infoByOrderNo/" + orderNo, function (r) {
                vm.bill = r.bill;
                r.bill.paymentRecords.forEach(function (item) {
                    vm.paymentRecords.push(item);
                });
                $("#recordTable").bootstrapTable("removeAll");
                $("#recordTable").bootstrapTable("append", vm.paymentRecords);
                vm.showList = false;
                vm.detailList = true;
                vm.payList = false;
            });
        },
        //查 费用明细表 (仓储订单 每日仓储费用 的金额组成）
        getCostInfo: function (recordId) {
            vm.storageFee = '';
            vm.orderCost = {};
            $.get(baseURL + "bill/bill/chargesInfo/" + recordId, function (r) {
                vm.storageFee = r.map.storageFee;
                vm.orderCost = r.map.orderCost;
                $("#costTable1").bootstrapTable("removeAll");
                $("#costTable2").bootstrapTable("removeAll");
                var data = [];
                data.push({
                    0: '仓储费', 1: '装卸费', 2: '处置费', 3: '重复上下架', 4: '分拣费', 5: '理货费', 6: '抄码费', 7: '复冻费'
                });
                data.push({
                    0: vm.storageFee,
                    1: vm.orderCost.money1,
                    2: vm.orderCost.money2,
                    3: vm.orderCost.money3,
                    4: vm.orderCost.money4,
                    5: vm.orderCost.money5,
                    6: vm.orderCost.money6,
                    7: vm.orderCost.money7
                });
                $("#costTable1").bootstrapTable("append", data);
                var arr = [];
                arr.push({
                    a: '查验移箱费', b: '查验掏箱费', c: '查验开关箱门费及铅封', d: '门到门查验费', e: '出入库费', f: '缠绕膜',
                    g: '箱车对倒', h: '预冷费'
                });
                arr.push({
                    a: vm.orderCost.money8, b: vm.orderCost.money9, c: vm.orderCost.money10, d: vm.orderCost.money11,
                    e: vm.orderCost.money12, f: vm.orderCost.money13, g: vm.orderCost.money14, h: vm.orderCost.money15
                });
                $("#costTable2").bootstrapTable("append", arr);
                vm.showList = false;
                vm.detailList = true;
                vm.payList = false;
            });
        },
        //获取勾选的付款记录信息
        getRecordInfo: function (recordId) {
            // vm.paymentRecord = {};
            // $.get(baseURL + "paymentRecord/paymentrecord/info/" + recordId, function (r) {
            //     vm.paymentRecord = r.paymentRecord;
            // });
            $.ajax({
                type: "POST",
                url: baseURL + "paymentRecord/paymentrecord/info/" + recordId,
                async: false,            //ajax异步请求改成同步的 以便 vm.paymentRecord.payMethod 可以直接取值
                contentType: "application/json",
                // data: JSON.stringify(recordId),
                success: function (r) {
                    if (r.paymentRecord != null) {
                        vm.paymentRecord = r.paymentRecord;
                    }
                }
            });
        },
        reload: function (event) {
            // $("#radioA").prop("checked",true);
            vm.payList = true;
            vm.transfer = {
                linkOrder: 0
            };
            vm.$refs.file.destroy();
            vm.$refs.file.initFileInput();

        },
        back: function () {
            window.location.href = '/modules/bill/myaccount.html';
        },
        //显示付款页面
        showPayList: function (event) {
            var rows = $('#recordTable').bootstrapTable('getSelections');
            console.log("****rows****", rows);
            if (!rows.length) {
                alert("请先勾选付款记录");
                return;
            }

            vm.paymentRecords = [];
            rows.forEach(function (row) {
                console.log("****row.id****", row.id);
                //根据勾选的id查询每条勾选的记录
                vm.paymentRecord = {};
                vm.getRecordInfo(row.id);
                console.log("****payStatus****", vm.paymentRecord.payStatus);
                //付款操作只针对 未付款的状态
                if (vm.paymentRecord.payStatus != 0) {
                    alert("您勾选的记录中包含已付款的记录");
                    return;
                }
                vm.paymentRecords.push(vm.paymentRecord);
            });

            console.log(vm.paymentRecords.length);
            if (vm.paymentRecords.length == rows.length) {
                //显示支付页面
                vm.getMyAccount();     //获取账户信息
                vm.getSum();        //计算支付金额 (勾选的付款记录的金额总和)
                vm.getCardList();   //获取银行卡信息
                // vm.getMsg();        //线下转账 获取 付款方公账信息
                vm.showList = false;
                vm.detailList = false;
                vm.payList = true;

                vm.images.length = 0;       //转账凭证上传框
                vm.$refs.file.destroy();
                vm.$refs.file.initFileInput();
            }
        },

        //获取绑定的银行卡
        getCardList: function () {
            $.get(baseURL + "bill/bankcard/list/", function (r) {
                if (r.code == '0')
                    vm.bankCardList = r.rows;
                else
                    alert(r.msg);
            });
        },

        //获取账户余额、账户密码
        getMyAccount: function () {
            // vm.myAccount = {};
            $.ajax({
                type: "POST",
                url: baseURL + "bill/bill/getMyAccount",
                //async: false,
                contentType: "application/json",
                // data: JSON.stringify(vm.paymentRecords),
                success: function (r) {
                    if (r.myAccount != null) {
                        console.log(r.myAccount.balance);
                        console.log(r.myAccount.password);
                        vm.payment.accountBalance = r.myAccount.balance;
                        vm.myAccount = r.myAccount;
                    }
                }
            });
            // return psw;
        },

        //计算支付金额 (勾选的付款记录的金额总和)
        getSum: function () {
            var sum = 0;
            var numbers = [];
            vm.paymentRecords.forEach(function (item) {
                numbers.push(item.amount);
            });
            numbers.forEach(function (e) {
                sum += e;
            });
            console.log("sum====" + sum);
            vm.payment.amountToPay = sum;
        },

        //获取账户余额
        getBalance: function () {
            var balance = '';
            $.ajax({
                type: "POST",
                url: baseURL + "bill/bill/getMyAccount",
                async: false,
                contentType: "application/json",
                // data: JSON.stringify(vm.paymentRecords),
                success: function (r) {
                    if (r.myAccount != null) {
                        // vm.myAccount = r.myAccount;
                        balance = r.myAccount.balance;
                    }
                }
            });
            return balance;
        },

        //账户余额提醒
        getTip: function () {
            // var tip = '';
            // if (vm.payment.accountBalance < vm.payment.amountToPay) {
            //     //账户余额 小于 支付金额 ---> 拒绝 余额支付 请求
            //     tip = "余额不足";
            // }
            // return tip;
        },

        //线下转账 获取 付款方公账信息
        getMsg: function () {
            $.ajax({
                type: "POST",
                url: baseURL + "bill/bill/getMsg",
                //async: false,
                contentType: "application/json",
                // data: JSON.stringify(vm.paymentRecords),
                success: function (r) {
                    if (r.company != null) {
                        console.log("付款方公账信息", r.company.bankAccount);
                        vm.payment.payerNumber = r.company.bankAccount;
                        vm.payment.payerName = r.company.legalPersonName;
                        vm.payment.payerBank = r.company.openingBank;
                    }
                }
            });
        },

        // a.1余额支付
        balancePayment: function (event) {
            console.log("paymentRecords", vm.paymentRecords);
            console.log("payment", vm.payment);

            if (vm.payment.remarks != null && vm.payment.remarks.length >= 20) {
                alert("备注长度要小于20个字符");
                return;
            }
            //账户余额 小于 支付金额 ---> 拒绝 余额支付 请求
            if (vm.payment.accountBalance < vm.payment.amountToPay) {
                alert("账户余额不足");
                return;
            }

            //密码验证
            console.log("账户密码", vm.myAccount.password);
            console.log("支付密码", vm.payment.password);
            if (vm.payment.password != vm.myAccount.password) {
                alert("密码错误！");              //三次锁定功能
                return;
            }

            vm.paymentVO = {};
            vm.paymentVO.paymentRecords = vm.paymentRecords;
            vm.paymentVO.payment = vm.payment;

            $.ajax({
                type: "POST",
                url: baseURL + "bill/bill/balancePayment",
                contentType: "application/json",
                data: JSON.stringify(vm.paymentVO),
                success: function (r) {
                    if (r.code == 0) {
                        alert('操作成功', function (index) {
                            vm.reload();
                        });
                    } else {
                        alert(r.msg);
                    }
                }
            });
        },

        // a.2银联支付
        unionPay: function (event) {
            if (vm.payment.remarks != null && vm.payment.remarks.length >= 20) {
                alert("备注长度要小于20个字符");
                return;
            }
            vm.paymentVO = {};
            vm.paymentVO.paymentRecords = vm.paymentRecords;
            vm.paymentVO.payment = vm.payment;
            $.ajax({
                type: "POST",
                url: baseURL + "bill/bill/unionPay",
                contentType: "application/json",
                dataType: 'html',
                data: JSON.stringify(vm.paymentVO),
                success: function (html) {
                    $("#temp").html(html);
                }
            });
        },

        // B.线下支付
        offlinePay: function (event) {
            if (vm.transfer.remarks != null && vm.transfer.remarks.length >= 20) {
                alert("备注长度要小于20个字符");
                return;
            }
            if (isBlank(vm.transfer.payeeId)){
                alert("请选择收款方公司");
                return;
            }
            if (vm.images.length == 0 && (vm.transfer.images == null || vm.transfer.images.length == 0)) {
                alert("请上传凭证");
                return;
            }
            if (vm.transfer.images == null) {
                vm.transfer.images = [];
            }
            vm.transfer.images = vm.transfer.images.concat(vm.images);
            if (vm.transfer.linkOrder == 0) {
                vm.transfer.orderNumber = null;
            }
            $.ajax({
                type: "POST",
                url: baseURL + "bill/incomeexpendituredetail/save",
                contentType: "application/json",
                data: JSON.stringify(vm.transfer),
                success: function (r) {
                    if (r.code == 0) {
                        alert('操作成功', function (index) {
                            vm.back();
                        });
                    } else {
                        alert(r.msg);
                    }
                }
            });
        },
        //获取所有注册公司
        getCompanys: function () {
            $.get({
                url: baseURL + "bill/incomeexpendituredetail/getCompanys",
                dataType: 'JSON',
                success: function (r) {
                    var s = JSON.stringify( r.companys);
                    s=s.replace(/companyName/g,"label");
                    s=s.replace(/id/g,"value");
                    vm.companys =JSON.parse(s);
                }
            })
        },

        getCompanys1: function () {
                $.get({
                    url: baseURL + "bill/incomeexpendituredetail/getCompanys",
                    dataType: 'JSON',
                    success: function (r) {
                        var s = JSON.stringify( r.companys);
                        s=s.replace(/bankAccount/g,"label");
                        vm.companys1 =JSON.parse(s);
                        for(var i=0;i<vm.companys1.length;i++){
                            vm.companys1[i].value=vm.companys1[i].label;
                        }
                    }
                })
        }
    },
    created: function () {
       this.getCompanys();
       this.getCompanys1();
    },
    watch: {
        "transfer.linkOrder": function (newValue, oldValue) {
            if (newValue == 1) {
                $("#radioA").prop("checked", false);
            }
        },
        "$i18n.locale": function (value) {
            if (value == 'en') {
                $("#table").bootstrapTable.defaults.locale = "en-US";
                $("#recordTable").bootstrapTable.defaults.locale = "en-US";
                $("#costTable1").bootstrapTable.defaults.locale = "en-US";
                $("#costTable2").bootstrapTable.defaults.locale = "en-US";
            } else {
                $("#table").bootstrapTable.defaults.locale = "zh-CN";
                $("#recordTable").bootstrapTable.defaults.locale = "zh-CN";
                $("#costTable1").bootstrapTable.defaults.locale = "zh-CN";
                $("#costTable2").bootstrapTable.defaults.locale = "zh-CN";
            }
            $("#table").bootstrapTable("destroy");
            $("#recordTable").bootstrapTable("destroy");
            $("#costTable1").bootstrapTable("destroy");
            $("#costTable2").bootstrapTable("destroy");
            this.initTable();
        },
    }
});

//检查 关联的订单号是否存在
function checkOrdN(value) {
    if (value == '' || value == null) {
        return;
    }
    $.ajax({
        type: "POST",
        url: baseURL + "bill/incomeexpendituredetail/checkOrdN",
        contentType: "application/json",
        data: value,
        success: function (r) {
            if (r.code === 0) {
                if (r.order == null) {
                    alert('该订单编号不存在', function () {
                        vm.reload();
                    });
                }
            } else {
                alert(r.msg);
            }
        }
    });
}

//检查 收款方公司名称是否存在
function checkComN(value) {
    if (value == '' || value == null) {
        return;
    }
    $.ajax({
        type: "POST",
        url: baseURL + "bill/incomeexpendituredetail/checkComN",
        contentType: "application/json",
        data: JSON.stringify(value),
        success: function (r) {
            if (r.code === 0) {
                console.log(JSON.stringify(r));
                if (r.count != 1) {
                    alert("收款方公司名称不存在");
                }
            } else {
                alert(r.msg);
            }
        }
    });
}