package com.wzlue.chain.web.controller.sys;

import cn.hutool.core.io.resource.ClassPathResource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.util.ResourceUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

/**
 * 合同模板下载
 */
@RestController
@RequestMapping("/contract/template")
public class DownloadContractController extends AbstractController{

    @RequestMapping("/download")
    public void downloadContract(HttpServletResponse response) throws IOException {
        //ResourceUtils无法获取jar包中的资源文件
        //        String path = ResourceUtils.getURL("classpath:").getPath()+"templateDownload/";

//        URL resource = this.getClass().getResource("/templateDownload/");
//        String path = resource.getPath();

        ClassPathResource classPathResource = new ClassPathResource("templateDownload/");
        String path = classPathResource.getAbsolutePath();

        System.out.println("合同模板地址=================================================================================================================");
        System.out.println(path);
        List fileNames = this.getFileName(path);
        if(fileNames == null||fileNames.size()==0){
            PrintWriter out = response.getWriter();
            response.setContentType("text/html; charset=GBK");//注意text/html，和application/html
            out.print("<html><body><script type='text/javascript'>alert('not found file');</script></body></html>");
            out.flush();
            out.close();
        }else{
            //开始批量压缩下载
            ZipOutputStream zos = new ZipOutputStream(response.getOutputStream());
            response.setContentType("APPLICATION/OCTET-STREAM");
            response.setHeader("Content-Disposition","attachment; filename="+this.getZipFilename());
            System.out.println("in BatchDownload................");
            File[] files = new File[fileNames.size()];
            for(int i=0;i<files.length;i++){
                String filename = fileNames.get(i).toString();
                files[i] = new File(path+"/"+filename);
            }
            //将文件进行压缩
            zipFile(files, "", zos);
            zos.flush();
            zos.close();
        }

    }

    /**
     * 获取文件列表
     * @param filePath
     * @return
     */
    public List getFileName(String filePath){
        File file = new File(filePath);
        List fileNameList = new ArrayList();
        File[] fileList = file.listFiles();
        if(fileList == null || fileList.length ==0){
            return null;
        }
        for(int i=0;i<fileList.length;i++){
            if("txt".equals(fileList[i].getName().substring(fileList[i].getName().lastIndexOf(".") + 1))){
                continue;
            }
            if(fileList[i].isFile()){
                String fileName = fileList[i].getName();
                fileNameList.add(fileName);
            }
        }
        return fileNameList;
    }

    /**
     * 压缩
     * @param subs
     * @param baseName
     * @param zos
     * @throws IOException
     */
    private void zipFile(File[] subs, String baseName, ZipOutputStream zos) throws IOException {
        for (int i=0;i<subs.length;i++) {
            File f=subs[i];
            zos.putNextEntry(new ZipEntry(baseName + f.getName()));
            FileInputStream fis = new FileInputStream(f);
            byte[] buffer = new byte[1024];
            int r = 0;
            while ((r = fis.read(buffer)) != -1) {
                zos.write(buffer, 0, r);
            }
            fis.close();
        }
    }

    /**
     * zip命名
     * @return
     */
    private String getZipFilename(){
        Date date=new Date();
        String s=date.getTime()+".zip";
        return s;
    }
}
