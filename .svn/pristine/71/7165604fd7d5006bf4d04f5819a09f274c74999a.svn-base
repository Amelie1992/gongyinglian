
package com.wzlue.chain.web.controller.contract;

import java.util.List;
import java.util.Map;


import com.wzlue.chain.common.utils.Constant;
import com.wzlue.chain.contract.entity.GoodsContractEntity;
import com.wzlue.chain.contract.service.GoodsContractService;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.wzlue.chain.web.controller.sys.AbstractController;


import com.wzlue.chain.common.utils.PageUtils;
import com.wzlue.chain.common.base.Query;
import com.wzlue.chain.common.base.R;


/**
 * 货物合同
 *
 * @author hjw
 * @email love@und.win
 * @date 2018-08-28 13:28:06
 */
@RestController
@RequestMapping("/contract/goodscontract")
public class GoodsContractController extends AbstractController {
    @Autowired
    private GoodsContractService goodsContractService;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public R list(@RequestParam Map<String, Object> params) {
        //查询列表数据
        Query query = new Query(params);
        if (getUserId() != Constant.SUPER_ADMIN) {
            query.put("companyId", getUser().getCompanyId());
        }
        List<GoodsContractEntity> goodsContractList = goodsContractService.queryList(query);
        int total = goodsContractService.queryTotal(query);

        return R.page(goodsContractList, total);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{id}")
    @RequiresPermissions("contract:goodscontract:info")
    public R info(@PathVariable("id") Long id) {
        GoodsContractEntity goodsContract = goodsContractService.queryObject(id);

        return R.ok().put("goodsContract", goodsContract);
    }

    /**
     * 信息
     */
    @RequestMapping("/infoByContractOrder")
    @RequiresPermissions("contract:goodscontract:info")
    public R info(@RequestParam Map<String, Object> params) {

        GoodsContractEntity goodsContract = goodsContractService.queryObjectByOrder(params);

        return R.ok().put("goodsContract", goodsContract);
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    @RequiresPermissions("contract:goodscontract:save")
    public R save(@RequestBody GoodsContractEntity goodsContract) {
        goodsContractService.save(goodsContract);

        return R.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    @RequiresPermissions("contract:goodscontract:update")
    public R update(@RequestBody GoodsContractEntity goodsContract) {
        goodsContractService.update(goodsContract);

        return R.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    @RequiresPermissions("contract:goodscontract:delete")
    public R delete(@RequestBody Long[] ids) {
        goodsContractService.deleteBatch(ids);

        return R.ok();
    }

    /**
     * 根据合同编号查询合同信息
     */
    @RequestMapping("/queryByContractNumber/{contractNumber}")
    @RequiresPermissions("contract:goodscontract:info")
    public R queryByContractNumber(@PathVariable("contractNumber") String contractNumber) {

        List<GoodsContractEntity> contracts = goodsContractService.queryByContractNumber(contractNumber);

        return R.page(contracts, contracts.size());
    }

}
