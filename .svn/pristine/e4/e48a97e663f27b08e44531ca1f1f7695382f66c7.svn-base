<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wzlue.chain.storage.dao.StorageOutCommodityDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wzlue.chain.storage.entity.StorageOutCommodityEntity" id="storageOutCommodityMap">
        <result property="id" column="id"/>
        <result property="outId" column="out_id"/>
        <result property="orderId" column="order_id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="orderCommodityId" column="order_commodity_id"/>
        <result property="commodityName" column="commodity_name"/>
        <result property="commodityNumber" column="commodity_number"/>
        <result property="commodityPrice" column="commodity_price"/>
        <result property="commodityUnit" column="commodity_unit"/>
        <result property="commodityFactoryNumber" column="commodity_factory_number"/>
        <result property="commodityCountry" column="commodity_country"/>
        <result property="weight" column="weight"/>
        <result property="weightNum" column="weight_num"/>
        <result property="outWeight" column="out_weight"/>
        <result property="outWeightNum" column="out_weight_num"/>
        <result property="outUnit" column="out_unit"/>
        <result property="productionDate" column="production_date"/>
        <result property="qualityTime" column="quality_time"/>
        <result property="expirationDate" column="expiration_date"/>
        <result property="inspectionNo" column="inspection_no"/>
        <result property="containerNo" column="container_no"/>
    </resultMap>

    <select id="queryObject" resultType="com.wzlue.chain.storage.entity.StorageOutCommodityEntity">
		SELECT * FROM storage_out_commodity WHERE id = #{value}
	</select>

    <select id="queryList" resultType="com.wzlue.chain.storage.entity.StorageOutCommodityEntity">
        SELECT
        a.*,
        (CASE WHEN a.out_unit=0 then '吨' else '托' END) unitName,
        (CASE WHEN a.commodity_unit=1 then '吨' else '千克' END) commodityUnitName,
        (SELECT c.name FROM sys_dict c WHERE a.commodity_country=c.code and c.type='国家编码') countryName,
        (select c.arrival_time from storage_order c WHERE c.id=a.order_id) orderTime
        FROM storage_out_commodity a
        <where>
            <if test="outId!=null and outId!=''">
                a.out_id=#{outId}
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                ORDER BY ${sidx} ${order}
            </when>
            <otherwise>
                ORDER BY id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
		SELECT count(*) FROM storage_out_commodity
	</select>

    <insert id="saveList" parameterType="com.wzlue.chain.storage.entity.StorageOutCommodityEntity" useGeneratedKeys="true"
            keyProperty="id">
		INSERT INTO storage_out_commodity
		(
			`out_id`,
            `order_id`,
			`order_number`,
			`order_commodity_id`,
			`commodity_name`,
			`commodity_number`,
			`commodity_price`,
			`commodity_unit`,
			`commodity_factory_number`,
			`commodity_country`,
			`weight`,
            `weight_num`,
			`out_weight`,
            `out_weight_num`,
			`out_unit`,
			`production_date`,
			`quality_time`,
			`expiration_date`,
			`inspection_no`,
			`container_no`
		)
		VALUES
        <foreach collection="list" separator="," item="item" >
		(
			#{item.outId},
            #{item.orderId},
			#{item.orderNumber},
			#{item.orderCommodityId},
			#{item.commodityName},
			#{item.commodityNumber},
			#{item.commodityPrice},
			#{item.commodityUnit},
			#{item.commodityFactoryNumber},
			#{item.commodityCountry},
			#{item.weight},
            #{item.weightNum},
			#{item.outWeight},
            #{item.outWeightNum},
			#{item.outUnit},
			#{item.productionDate},
			#{item.qualityTime},
			#{item.expirationDate},
			#{item.inspectionNo},
			#{item.containerNo}
		)
        </foreach>
	</insert>

    <update id="update" parameterType="com.wzlue.chain.storage.entity.StorageOutCommodityEntity">
        UPDATE storage_out_commodity
        <set>
            <if test="outId != null">`out_id` = #{outId},</if>
            <if test="orderId != null">`order_id` = #{orderId},</if>
            <if test="orderNumber != null">`order_number` = #{orderNumber},</if>
            <if test="orderCommodityId != null">`order_commodity_id` = #{orderCommodityId},</if>
            <if test="commodityName != null">`commodity_name` = #{commodityName},</if>
            <if test="commodityNumber != null">`commodity_number` = #{commodityNumber},</if>
            <if test="commodityPrice != null">`commodity_price` = #{commodityPrice},</if>
            <if test="commodityUnit != null">`commodity_unit` = #{commodityUnit},</if>
            <if test="commodityFactoryNumber != null">`commodity_factory_number` = #{commodityFactoryNumber},</if>
            <if test="commodityCountry != null">`commodity_country` = #{commodityCountry},</if>
            <if test="weight != null">`weight` = #{weight},</if>
            <if test="weightNum != null">`weight_num` = #{weightNum},</if>
            <if test="outWeight != null">`out_weight` = #{outWeight},</if>
            <if test="outWeightNum != null">`out_weight_num` = #{outWeightNum},</if>
            <if test="outUnit != null">`out_unit` = #{outUnit},</if>
            <if test="productionDate != null">`production_date` = #{productionDate},</if>
            <if test="qualityTime != null">`quality_time` = #{qualityTime},</if>
            <if test="expirationDate != null">`expiration_date` = #{expirationDate},</if>
            <if test="inspectionNo != null">`inspection_no` = #{inspectionNo},</if>
            <if test="containerNo != null">`container_no` = #{containerNo}</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
		DELETE FROM storage_out_commodity WHERE id = #{value}
	</delete>

    <delete id="deleteBatch">
        DELETE FROM storage_out_commodity WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByOutId">
        DELETE FROM storage_out_commodity WHERE out_id=#{outId}
    </delete>

</mapper>