
package com.wzlue.chain.web.controller.goods.apply;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import java.util.Map;

import com.wzlue.chain.goods.entity.apply.ItemPlaceApplyEntity;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.wzlue.chain.web.controller.sys.AbstractController;

import com.wzlue.chain.goods.entity.apply.ItemInfoApplyEntity;
import com.wzlue.chain.goods.service.apply.ItemInfoApplyService;
import com.wzlue.chain.common.base.Query;
import com.wzlue.chain.common.base.R;

/**
 * 商品申请表(商品信息)
 *
 * @date 2018-08-13
 */
@RequestMapping("/goods/apply")
@RestController
public class ItemInfoApplyController extends AbstractController {
    @Autowired
    private ItemInfoApplyService itemInfoApplyService;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public R list(@RequestParam Map<String, Object> params) {
        //查询列表数据
        Query query = new Query(params);
        //当前用户的公司id作为查询参数
        /*Long companyId = getUser().getCompanyId();
        if (companyId != null) {
            query.put("companyId", companyId.intValue());
        }*/
        List<ItemInfoApplyEntity> itemInfoApplyList = itemInfoApplyService.pageList(query);
        int total = itemInfoApplyService.pageCount(query);

        return R.page(itemInfoApplyList, total);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{id}")
    @RequiresPermissions("item:apply:info")
    public R info(@PathVariable("id") Long id) {
        ItemInfoApplyEntity itemInfoApply = itemInfoApplyService.queryInfo(id);
        if (itemInfoApply.getPlaces() != null && itemInfoApply.getPlaces().get(0) != null) {
            for (ItemPlaceApplyEntity item : itemInfoApply.getPlaces()) {
                item.setTariff(new BigDecimal(String.valueOf(item.getTariff())).multiply(new BigDecimal(100)));
                item.setAdditionDuty(new BigDecimal(String.valueOf(item.getAdditionDuty())).multiply(new BigDecimal(100)));
                item.setValueAddTariff(new BigDecimal(String.valueOf(item.getValueAddTariff())).multiply(new BigDecimal(100)));
            }
        }
        return R.ok().put("itemInfoApply", itemInfoApply);
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    @RequiresPermissions("item:apply:save")
    public R save(@RequestBody ItemInfoApplyEntity itemInfoApply) {
        itemInfoApply.setCreateBy(getUserId());
        itemInfoApply.setUpdateBy(getUserId());
        itemInfoApplyService.save(itemInfoApply);

        return R.ok();
    }

    /**
     * 审核
     */
    @RequestMapping("/review")
    /*@RequiresPermissions("item:apply:review")*/
    public R review(@RequestBody ItemInfoApplyEntity itemInfoApply) {
        itemInfoApply.setUpdateBy(getUserId());
        itemInfoApplyService.review(itemInfoApply);
        return R.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    /*@RequiresPermissions("item:apply:update")*/
    public R update(@RequestBody ItemInfoApplyEntity itemInfoApply) {
        if ("3".equals(itemInfoApply.getPendingStatus() + "")) {
            itemInfoApply.setPendingStatus(1);
            itemInfoApply.setPendingInfo("");
        }
        itemInfoApplyService.update(itemInfoApply);
        //更新产地信息
        List<ItemPlaceApplyEntity> placeEntity = itemInfoApply.getPlaces();
        for (ItemPlaceApplyEntity place : placeEntity) {
            place.setTariff(new BigDecimal(String.valueOf(place.getTariff())).divide(new BigDecimal(100)));
            place.setAdditionDuty(new BigDecimal(String.valueOf(place.getAdditionDuty())).divide(new BigDecimal(100)));
            place.setValueAddTariff(new BigDecimal(String.valueOf(place.getValueAddTariff())).divide(new BigDecimal(100)));
            itemInfoApplyService.updateUpdate(place);
        }
        return R.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    @RequiresPermissions("item:apply:delete")
    public R delete(@RequestBody Long[] id) {
        itemInfoApplyService.deleteBanchById(id);

        return R.ok();
    }

}
