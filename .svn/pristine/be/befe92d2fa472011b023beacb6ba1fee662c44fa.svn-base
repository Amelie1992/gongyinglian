package com.wzlue.chain.web.controller.sys;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.*;
import java.util.*;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

/**
 * 合同模板下载
 */
@RestController
@RequestMapping("/contract/template")
public class DownloadContractController extends AbstractController{

    @RequestMapping("/download")
    public void downloadContract(HttpServletResponse response) throws IOException {
        try {
        	Path path;
        	URI uri = getClass().getClassLoader().getResource("templateDownload").toURI();
			if("jar".equals(uri.getScheme())) {
				if(uri.getPath()==null){
					FileSystem fs = FileSystems.newFileSystem(uri, new HashMap<String, Object>());
					path = fs.getPath("BOOT-INF/classes/templateDownload/");
				}else{
					File file = new File(uri.getPath());
					if(!file.exists()){
						FileSystem fs = FileSystems.newFileSystem(uri, Collections.<String, Object>emptyMap());
						path = fs.getPath("BOOT-INF/classes/templateDownload/");
					}else{
						path = Paths.get(uri);
					}
				}
			} else {
				path = Paths.get(uri);
			}
			try (DirectoryStream<Path> dir = Files.newDirectoryStream(path)) {
				Iterator<Path> iterator = dir.iterator();
				if (iterator.hasNext()) {
					//开始批量压缩下载
		            ZipOutputStream zos = new ZipOutputStream(response.getOutputStream());
		            response.setContentType("APPLICATION/OCTET-STREAM");
		            response.setHeader("Content-Disposition","attachment; filename="+this.getZipFilename());
		            Path p;
		            do {
		            	p = iterator.next();
		                zos.putNextEntry(new ZipEntry(p.getFileName().toString()));
		                InputStream is = getClass().getClassLoader().getResourceAsStream("templateDownload/" + p.getFileName().toString());
		                byte[] buffer = new byte[1024];
		                int r = 0;
		                while ((r = is.read(buffer)) != -1) {
		                    zos.write(buffer, 0, r);
		                }
		                is.close();
		            } while(iterator.hasNext());
		            zos.flush();
		            zos.close();
				} else {
					PrintWriter out = response.getWriter();
		            response.setContentType("text/html; charset=GBK");//注意text/html，和application/html
		            out.print("<html><body><script type='text/javascript'>alert('not found file');</script></body></html>");
		            out.flush();
		            out.close();
				}
			}
		} catch (URISyntaxException e) {
			e.printStackTrace();
		}
    }

    /**
     * 获取文件列表
     * @param filePath
     * @return
     */
    public List getFileName(String filePath){
        File file = new File(filePath);
        List fileNameList = new ArrayList();
        File[] fileList = file.listFiles();
        if(fileList == null || fileList.length ==0){
            return null;
        }
        for(int i=0;i<fileList.length;i++){
            if("txt".equals(fileList[i].getName().substring(fileList[i].getName().lastIndexOf(".") + 1))){
                continue;
            }
            if(fileList[i].isFile()){
                String fileName = fileList[i].getName();
                fileNameList.add(fileName);
            }
        }
        return fileNameList;
    }

    /**
     * zip命名
     * @return
     */
    private String getZipFilename(){
        Date date=new Date();
        String s=date.getTime()+".zip";
        return s;
    }
}
